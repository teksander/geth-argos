#!/bin/bash
 
source experimentconfig.sh

echo "+-----------------------------------------------------------+"
echo "Updating the Smart Contract"

sed -e "s|MAXSTAKERS|$MAXSTAKERS|g"\
    -e "s|MAXWORKERS|$MAXWORKERS|g"\
    -e "s|DEMAND_A|$DEMAND_A|g"\
    -e "s|DEMAND_B|$DEMAND_B|g"\
    -e "s|LIMITASSIGN|$LIMITASSIGN|g"\
    -e "s|QUOTA|$QUOTA|g"\
    -e "s|FUELCOST|$FUELCOST|g"\
    -e "s|BLOCKPERIOD|$BLOCKPERIOD|g"\
    -e "s|REGENRATE|$REGENRATE|g"\
    -e "s|STAKERSHARE|$STAKERSHARE|g"\
    -e "s|WORKERSHARE|$WORKERSHARE|g"\
    -e "s|EPSILON|$EPSILON|g"\
    -e "s|WINSIZE|$WINSIZE|g"\
  $SCTEMPLATE > $SCFILE

echo "+-----------------------------------------------------------+"
echo "Sending python scripts"
cp -r $EXPERIMENTFOLDER/controllers/docker/* $DOCKERFOLDER/geth/python_scripts/

echo "+-----------------------------------------------------------+"
echo "Compiling the Smart Contract"

# Compile smart contract
solc --overwrite --abi --bin-runtime -o  "${EXPERIMENTFOLDER}/scs/build/" $SCFILE
cp -r "${EXPERIMENTFOLDER}/scs/build/$CONTRACTNAME.bin-runtime" "${DOCKERFOLDER}/geth/contracts/deploy.bin-runtime"
cp -r "${EXPERIMENTFOLDER}/scs/build/$CONTRACTNAME.abi" "${DOCKERFOLDER}/geth/contracts/deploy.abi"

BINDATA=`cat ${CONTRACTBIN}`

echo "+-----------------------------------------------------------+"
echo "Generating the Genesis block"

# Create genesis using puppeth
bash ${DOCKERFOLDER}/geth/files/reset-genesis ${NUMROBOTS} $BLOCKPERIOD

# Insert the smart contract into the genesis 
sed -ie "s|123\": {|123\": {\n\"code\": \"0xBINDATA\",|g" ${GENESISFILE}
sed -ie "s|BINDATA|$BINDATA|g" ${GENESISFILE}
# Change the gas limit
sed -ie "s|0x47b760|0x9000000000000|g" ${GENESISFILE}
# Change the value of the pre-funded accounts
sed -ie "s|\"0x200000000000000000000000000000000000000000000000000000000000000\"|\"0x1236efcbcbb340000\"|g" ${GENESISFILE}
# # Undo for the contract account (first match)
sed -ie "0,/\"0x1236efcbcbb340000\"/s//\"0x200000000000000000000000000000000000000000000000000000000000000\"/" ${GENESISFILE}

# 0x1236efcbcbb340000 = 21 ether
# 0xde0b6b3a7640000 = 1 ether

echo "+-----------------------------------------------------------+"
echo "Restarting the docker containers"

echo "Shuting down docker process..."
bash ${DOCKERFOLDER}/local/stop-network ${CONTAINERBASE} ${SWARMNAME}

echo "Starting new docker process..."
bash ${DOCKERFOLDER}/local/start-network $NUMROBOTS

echo "+-----------------------------------------------------------+"
echo "Creating the identifier file"

## Create identifiers file

# Get IDs
seq 1 $NUMROBOTS > temp1.txt

# Get containers
docker ps --format '{{.Names}} {{.ID}}' | sort -V > temp2.txt

wait

# Get external IP @ 172.
./bash-all -s "ip a" | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b" | grep "172\." | grep -v "\.255" > temp3.txt

wait

# Get internal IP @ 10.0. or 10.1.
./bash-all -s "ip a" | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b" | grep "10\."  | grep -v "10\.0\.0" | grep -v "\.255" > temp4.txt

wait

# Save to identifiers file
paste temp1.txt temp2.txt temp3.txt temp4.txt > identifiers.txt
rm temp1.txt temp2.txt temp3.txt temp4.txt
