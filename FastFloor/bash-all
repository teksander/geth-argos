#!/bin/bash
# Short script to execute a CONSOLE command on docker containers
# Assumes docker containers are running with name prefix ${CONTAINERBASE}.
# 1 argument executes on all containers
# 2+ arguments executes the input robot IDs

# Options:
# -t list of robot IDs to bash (string, e.g. "1 2 3 4")
# -s script to be executed     (string, bash, geth, python. Default: bash)


NUM_ROB=$(docker ps | grep ${CONTAINERBASE}. | wc -l) 
TARGETS=($(seq 1 $NUM_ROB))
SCRIPT=""

while getopts ":t:s:" opt; do

  case ${opt} in
    t ) # process option t
        unset TARGETS
        TARGETS=(${OPTARG})
        ;;
    s ) # process option s
        SCRIPT=${OPTARG}
        ;;
    \? ) echo "Usage: ./bash-all [-s] (\"ls\" / \"ps\" / \"<etc>\") [-t] \"list of robot IDs\" )"
        ;;

  esac
done

bash_ALL(){
for ID in "${TARGETS[@]}"; do
    CT=$(docker ps -q -f name="${CONTAINERBASE}.${ID}\.")
    echo "----------------------- Robot $ID -----------------------"
    docker exec -it $CT ${1}
done
}

if [[ "$SCRIPT" = "addPeers" ]]; then 

    echo "Executing custom script: addPeers"

    ./geth-all "admin.nodeInfo.enode" |  tr \" ' ' > temp.txt 
    for enode in $(cat temp.txt)
    do 
        ./geth-all "admin.addPeer(\"$enode\")"
    done
    rm temp.txt

else  
    echo "Executing script: $SCRIPT"
    bash_ALL "$SCRIPT"
fi





