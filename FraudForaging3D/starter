#!/bin/bash
# Start an experiment
#
# Options:
# --reset    or -r  : will reset everything blockchain related
# --start    or -s  : will start the experiment
# --startz   or -sz : will start with no visualization
# --logs     or -l  : will display monitor.log for all robots
# --python   or -p  : will display python console for all robots
# Example: 
# . starter -r -s -l -p

source experimentconfig.sh

echo "+-----------------------------------------------------------+"
echo "MAINFOLDER IS $MAINFOLDER"

echo "+-----------------------------------------------------------+"
echo "Updating the ARGoS XML file"

envsubst < $ARGOSTEMPLATE > $ARGOSFILE

for opt in "$@"
do
if [[ $opt == "--reset" || $opt == "-r" ]]; then

    echo "+-----------------------------------------------------------+"
    echo "Sending python scripts"
    cp -r $EXPERIMENTFOLDER/controllers/docker/* $DOCKERFOLDER/geth/python_scripts/


    echo "+-----------------------------------------------------------+"
    echo "Resetting Geth..."
    ./reset-geth
fi
done

echo "+-----------------------------------------------------------+"
echo "Waiting web3 to respond..."

ready=0
while [[ $ready != $NUMROBOTS ]]; do
    . test-tcp 4000 9899
    sleep 0.5
done

echo "+-----------------------------------------------------------+"
echo "Cleaning logs folder..."

eval $(echo "rm -rf logs/{0..250}")
eval $(echo "mkdir logs/{0..$(($NUMROBOTS))}")
eval $(echo "touch logs/{0..$(($NUMROBOTS))}/monitor.log")

echo "+-----------------------------------------------------------+"
echo "Starting Experiment"


for opt in "$@"; do
if [[ $opt == "--start" || $opt == "-s" ]]; then
    argos3 -c $ARGOSFILE
fi

if [[ $opt == "--start-novis" || $opt == "-sz" ]]; then
    argos3 -z -c $ARGOSFILE
fi
done
wait
for opt in "$@"; do
if [[ $opt == "--logs" || $opt == "-l" ]]; then
    gnome-terminal --title="Monitor" ./tmux-all -l monitor.log
fi

if [[ $opt == "--python" || $opt == "-p" ]]; then
    ./tmux-all -s python
fi
done